import { EFormFieldType, IFormField } from '../../../types/universalTypes';

export const formFields = ({
  employersOptions,
  lawyersOptions,
  clientsOptions,
  courtsOptions,
  ssnNumbersOptions,
  packagesOptions,
  citiesOptions,
  executorsOptions,
}: any): IFormField[] => [
  {
    name: 'firstName',
    type: EFormFieldType.input,
    gridWidth: 6,
    condition: false,
  },
  {
    name: 'lastName',
    type: EFormFieldType.input,
    gridWidth: 6,
    condition: false,
  },
  {
    name: 'jmbg',
    type: EFormFieldType.input,
    gridWidth: 12,
    condition: false,
  },
  {
    name: 'name',
    type: EFormFieldType.input,
    gridWidth: 6,
    condition: true,
  },
  {
    name: 'pib',
    type: EFormFieldType.input,
    gridWidth: 6,
    condition: true,
  },
  {
    name: 'employed',
    type: EFormFieldType.checkbox,
    gridWidth: 6,
    condition: false,
  },
  {
    name: 'employer',
    type: EFormFieldType.autocomplete,
    gridWidth: 12,
    condition: false,
    secondCondition: true,
    options: employersOptions,
  },
  {
    name: 'cession',
    type: EFormFieldType.checkbox,
    gridWidth: 6,
  },
  {
    name: 'executors',
    subfieldName: 'executor',
    type: EFormFieldType.dynamicAutocompletes,
    gridWidth: 12,
    options: executorsOptions,
  },
  {
    name: 'principal',
    type: EFormFieldType.input,
    gridWidth: 6,
    format: /[^0-9.]/g,
  },
  {
    name: 'interest',
    type: EFormFieldType.input,
    gridWidth: 6,
    format: /[^0-9.]/g,
  },
  {
    name: 'businessNumbers',
    subfieldName: 'businessNumber',
    type: EFormFieldType.dynamicInputs,
    gridWidth: 12,
  },
  {
    name: 'caseNumber',
    type: EFormFieldType.input,
    gridWidth: 6,
  },
  {
    name: 'contractNumber',
    type: EFormFieldType.input,
    gridWidth: 6,
  },
  {
    name: 'ssnNumber',
    type: EFormFieldType.autocomplete,
    gridWidth: 6,
    options: ssnNumbersOptions,
  },
  {
    name: 'package',
    type: EFormFieldType.autocomplete,
    gridWidth: 6,
    options: packagesOptions,
  },
  {
    name: 'phoneNumbers',
    subfieldName: 'phoneNumber',
    type: EFormFieldType.dynamicInputs,
    gridWidth: 12,
  },
  {
    name: 'address',
    type: EFormFieldType.input,
    gridWidth: 6,
  },
  {
    name: 'email',
    type: EFormFieldType.input,
    gridWidth: 6,
  },
  {
    name: 'zipCode',
    type: EFormFieldType.input,
    gridWidth: 6,
    format: /^\d{6}$/, // Regular expression for 5-digit ZIP code
  },
  {
    name: 'city',
    type: EFormFieldType.autocomplete,
    gridWidth: 6,
    options: citiesOptions,
  },
  {
    name: 'lawyer',
    type: EFormFieldType.autocomplete,
    gridWidth: 6,
    options: lawyersOptions,
  },
  {
    name: 'court',
    type: EFormFieldType.autocomplete,
    gridWidth: 6,
    options: courtsOptions,
  },
  {
    name: 'client',
    type: EFormFieldType.autocomplete,
    gridWidth: 6,
    options: clientsOptions,
  },
  {
    name: 'enteringDate',
    type: EFormFieldType.datepicker,
    gridWidth: 6,
  },
  {
    name: 'lawyerHandOverDate',
    type: EFormFieldType.datepicker,
    gridWidth: 6,
  },
  {
    name: 'closingDate',
    type: EFormFieldType.datepicker,
    gridWidth: 6,
  },
  {
    name: 'status',
    type: EFormFieldType.input,
    gridWidth: 6,
  },
  {
    name: 'oldPayment',
    type: EFormFieldType.input,
    gridWidth: 6,
  },
  {
    name: 'ourTaxes',
    type: EFormFieldType.input,
    gridWidth: 6,
  },
  {
    name: 'warningPrice',
    type: EFormFieldType.input,
    gridWidth: 6,
  },
  {
    name: 'comment',
    type: EFormFieldType.textArea,
    gridWidth: 12,
  },
];
